type Query {
  info: String!
  dogs: [Dog!]!
  owners: [Owner!]!
  dog(id: ID!): Dog! 
  owner(id: ID!): Owner! 
}

type Mutation{
  uploadDog(name: String!, breed: String!): Dog!
#  updateDog(id: ID!, name: String!, breed: String!): Dog!
#  deleteDog(id: ID!): Dog!
   signup(email: String!, password: String!, name: String!, personalPhone: String!, workPhone: String!,workId: String!): AuthPayload
   login(email: String!, password: String!): AuthPayload
}

type Dog{
  id: ID!
  name: String!
  breed: String!
#  VaccRecord: VaccRecord!
#  Owner: Owner!
}


type Owner{
  id: ID!
  email: String! 
  password: String!
  name: String!
  personalPhone: String!
  workPhone: String!
  workId: String!
}

type AuthPayload{
  token: String!
  owner: Owner!
}

#type VaccRecord{
#  vaccRabies: String!
#  vacc2: String!
#  vacc3: String!
#}
